# on:
#  release:
#    types:
#      - published
on:
  workflow_dispatch:

name: Create Release

jobs:
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2.3.4
      - name: Setup Python
        uses: actions/setup-python@v2.2.2
        with:
          python-version: '3.8'
      - name: Permacache Poetry
        id: cache-poetry
        uses: actions/cache@v2.1.6
        with:
          path: ~/.poetry
          key: poetry
      - name: Install latest version of Poetry
        if: steps.cache-poetry.outputs.cache-hit != 'true'
        uses: snok/install-poetry@v1
      - name: Add Poetry to $PATH
        run: |
          echo "$HOME/.poetry/bin" >> $GITHUB_PATH
      - name: Get Poetry version
        run: poetry --version
      - name: Check pyproject.toml validity
        run: poetry check --no-interaction
      - name: Cache dependencies
        id: cache-deps
        uses: actions/cache@v2.1.6
        with:
          path: ${{github.workspace}}/.venv
          key: poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: poetry-
      - name: Install deps
        if: steps.cache-deps.cache-hit != 'true'
        run: |
          poetry config virtualenvs.in-project true
          poetry install --no-interaction
      - name: Run tests
        run: poetry run test
      - name: Build
        run: poetry build
      - name: Publish in PyPi
        env:
          POETRY_HTTP_BASIC_PYPI_USERNAME: ${{ secrets.OSC_PYPI_USER }}
          POETRY_HTTP_BASIC_PYPI_PASSWORD: ${{ secrets.OSC_PYPI_TOKEN }}
        run: |
          poetry config http-basic.pypi "$POETRY_HTTP_BASIC_PYPI_USERNAME" "$POETRY_HTTP_BASIC_PYPI_PASSWORD"
          poetry publish